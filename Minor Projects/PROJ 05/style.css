/* 
Uncomment the properties for seeing their functions.

By changing the number of order property we can change the order in which the groups appear.
By changing the flex-grow property we can relatively arrage contents. we can use it instead of width; apply to the base class.
flex-basis and flex-grow would help in creating layouts.
*/

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

.container1 {
  border: 3px solid black;
  display: flex;
  flex-wrap: wrap;

  /*
  flex-direction: column;
  flex-direction: column-reverse;
  flex-direction: row-reverse;
  flex-direction: row;
  
 
  justify-content: end;
  
  justify-content: center;
  justify-content: flex-end;
  align-items: stretch;
  justify-content: space-evenly;
  height: 50vh;
  align-items: center;
  */
}

.box {
  height: 10rem;
  flex: 1 1 10rem;
  /*
  flex-basis: 10rem;
  flex-grow: 1;
  */
}

.box1 {
  background: teal;
  order: 1;
}

.box2 {
  background: chartreuse;
  order: 2;
}

.box3 {
  background: khaki;
  order: 3;
}

.box4 {
  background: rgb(160, 77, 0);
  order: 4;
}

.box5 {
  background: rgb(201, 8, 185);
  order: 5;
}

.box6 {
  background: rgb(37, 48, 155);
  order: 6;
}
